#!/bin/sh

set -e

if [ "$HUGO_VERSION_OVERRIDE" != "" ]; then
    target="/tmp/hugo-${HUGO_VERSION_OVERRIDE}-${HUGO_EDITION}"

    # Download if the requested Hugo version is not available
    if [ ! -e $target ]; then
        # Determine architecture
        arch=Linux-64bit
        if [ "$(uname -m)" = "aarch64" ]; then
            arch=linux-arm64
        fi

        # Download standard edition
        if [ "${HUGO_EDITION}" = "standard" ]; then
            echo "Downloading Hugo ${HUGO_VERSION_OVERRIDE}..."
            wget -q "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION_OVERRIDE}/hugo_${HUGO_VERSION_OVERRIDE}_${arch}.tar.gz" -O $target.tar.gz || true

        # Download extended edition
        elif [ "${HUGO_EDITION}" = "extended" ]; then
            echo "Downloading Hugo ${HUGO_VERSION_OVERRIDE}..."
            wget -q "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION_OVERRIDE}/hugo_extended_${HUGO_VERSION_OVERRIDE}_${arch}.tar.gz" -O $target.tar.gz || true

        # Unknown edition
        else
            echo "Unknown edition '${HUGO_EDITION}'."
            exit 1
        fi

        if [ ! -e $target.tar.gz ] || [ "$(stat --printf="%s" $target.tar.gz)" = "0" ]; then
            rm $target.tar.gz
            echo "Unable to download Hugo ${HUGO_VERSION_OVERRIDE} ${HUGO_EDITION} edition."
            exit 1
        fi

        # Unpack
        mkdir -p $target
        tar -zxf $target.tar.gz -C $target
        rm -f $target.tar.gz
    fi

    # Run the downloaded Hugo version
    exec $target/hugo "$@"
else
    # Run the included Hugo version
    exec /usr/lib/hugo/hugo "$@"
fi
